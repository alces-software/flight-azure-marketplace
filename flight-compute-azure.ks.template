auth --enableshadow --passalgo=sha512
reboot
firewall --enabled --service=ssh
firstboot --disable
ignoredisk --only-use=vda
keyboard --vckeymap=us --xlayouts='us'
# System language
lang en_US.UTF-8
repo --name "os" --baseurl="http://mirror.centos.org/centos/7/os/x86_64/" --cost=100
repo --name "updates" --baseurl="http://mirror.centos.org/centos/7/updates/x86_64/" --cost=100
repo --name "extras" --baseurl="http://mirror.centos.org/centos/7/extras/x86_64/" --cost=100
# Network information
network  --bootproto=dhcp
network  --hostname=localhost.localdomain
# Root password
rootpw alcesflightonazure
selinux --enforcing
services --disabled="kdump" --enabled="network,sshd,rsyslog,chronyd"
timezone UTC --isUtc
# Disk
bootloader --append="console=tty0" --location=mbr --timeout=1 --boot-drive=vda
zerombr
clearpart --all --initlabel
part / --fstype="xfs" --ondisk=vda --size=4096 --grow

%post --erroronfail

# setup systemd to boot to the right runlevel
rm -f /etc/systemd/system/default.target
ln -s /lib/systemd/system/multi-user.target /etc/systemd/system/default.target

yum -C -y remove linux-firmware

# Remove firewalld; it is required to be present for install/image building.
# but we dont ship it in cloud
yum -C -y remove firewalld --setopt="clean_requirements_on_remove=1"
yum -C -y remove avahi\* Network\*
sed -i '/^#NAutoVTs=.*/ a\
NAutoVTs=0' /etc/systemd/logind.conf

cat > /etc/sysconfig/network << EOF
NETWORKING=yes
NOZEROCONF=yes
EOF

rm -f /etc/udev/rules.d/70*
ln -s /dev/null /etc/udev/rules.d/80-net-name-slot.rules

# simple eth0 config, again not hard-coded to the build hardware
cat > /etc/sysconfig/network-scripts/ifcfg-eth0 << EOF
DEVICE="eth0"
BOOTPROTO="dhcp"
ONBOOT="yes"
TYPE="Ethernet"
USERCTL="yes"
PEERDNS="yes"
IPV6INIT="no"
PERSISTENT_DHCLIENT="1"
EOF

echo "virtual-guest" > /etc/tuned/active_profile

# generic localhost names
cat > /etc/hosts << EOF
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6

EOF
echo .

systemctl mask tmp.mount

cat <<EOL > /etc/sysconfig/kernel
# UPDATEDEFAULT specifies if new-kernel-pkg should make
# new kernels the default
UPDATEDEFAULT=yes

# DEFAULTKERNEL specifies the default kernel package type
DEFAULTKERNEL=kernel
EOL

# Disable selinux
sed -e 's/^SELINUX=.*/SELINUX=disabled/g' -i /etc/selinux/config

# Prep sudo
sed -e "s/Defaults    requiretty/#Defaults    requiretty/g" -i /etc/sudoers

# Lock/scramble root password
dd if=/dev/urandom count=50|md5sum|passwd --stdin root
passwd -l root

# make sure firstboot doesn't start
echo "RUN_FIRSTBOOT=NO" > /etc/sysconfig/firstboot

yum -y install WALinuxAgent cloud-init
cat << EOF > /etc/waagent.conf
#
# Microsoft Azure Linux Agent Configuration
#
Provisioning.Enabled=n
Provisioning.UseCloudInit=y
Provisioning.DeleteRootPassword=n
Provisioning.RegenerateSshHostKeyPair=y
Provisioning.SshHostKeyPairType=rsa
Provisioning.MonitorHostName=y
Provisioning.DecodeCustomData=n
Provisioning.ExecuteCustomData=n
Provisioning.AllowResetSysUser=n
ResourceDisk.Format=y
ResourceDisk.Filesystem=ext4
ResourceDisk.MountPoint=/mnt/resource
ResourceDisk.EnableSwap=y
ResourceDisk.SwapSizeMB=16384
ResourceDisk.MountOptions=None
Logs.Verbose=n
OS.RootDeviceScsiTimeout=300
OS.OpensslPath=None
OS.SshDir=/etc/ssh
OS.EnableFirewall=n
EOF

systemctl enable cloud-init
systemctl enable waagent

###################################################################
# Flight install
###################################################################

# Configure SSHD
sed -i -e 's/#ClientAliveInterval 0/ClientAliveInterval 300/g' \
       -e 's/#ClientAliveCountMax 3/ClientAliveCountMax 4/g' \
    /etc/ssh/sshd_config

mkdir -p /etc/systemd/system-preset
cat << EOF > /etc/systemd/system-preset/00-alces-base.preset
disable libvirtd.service
disable NetworkManager.service
disable firewalld.service
EOF

# Base ClusterWare install and configuration
yum -y groupinstall "Development Tools"
yum -y install nano screen emacs tree vim
export cw_DIST=el7
export cw_BUILD_release="%BUILD_RELEASE%"
curl -sL http://git.io/clusterware-installer | /bin/bash
sed -e "s,%RELEASE%,$(printf "%40s" "Flight Compute r${cw_BUILD_release}"),g" \
    -i /opt/clusterware/etc/banner
cat <<EOF > /opt/clusterware/etc/flight.rc
################################################################################
##
## Alces Clusterware - Shell configuration
## Copyright (c) 2017 Alces Software Ltd
##
################################################################################
cw_FLIGHT_release="${cw_BUILD_release}"
EOF

# Add image configuration defaults
cat <<EOF > /opt/clusterware/etc/defaults.yml
---
cluster:
  scheduler:
    allocation: autodetect
EOF
PATH=/opt/clusterware/bin:$PATH

alces service install gridware
alces service install clusterware-sessions
alces service install clusterware-storage
alces service install gridscheduler
alces handler enable clusterable
alces handler enable cluster-nfs
alces handler enable cluster-sge
alces handler enable cluster-gridware
alces handler enable session-firewall
alces handler enable cluster-firewall
alces handler enable taskable
alces session enable gnome

# Patch network functions to enable Azure support
pushd /opt/clusterware/lib/functions
patch -p0 <<'PATCH'
--- network.functions.sh.orig    2018-01-18 16:59:39.967277826 +0000
+++ network.functions.sh    2018-01-18 17:06:02.482203743 +0000
@@ -39,6 +39,11 @@
     fi

     if [ -z "$public_ipv4" ]; then
+        public_ipv4="$(curl -s -H Metadata:true "http://169.254.169.254/metadata/instance?api-version=2017-04-02" | \
+          "${cw_ROOT}"/opt/jq/bin/jq -r '.network.interface[0].ipv4.ipAddress[0].publicIpAddress')"
+    fi
+
+    if [ -z "$public_ipv4" ]; then
         # Couldn't find it via EC2 API, use apparent public interface address.
         ip -o route get 8.8.8.8 \
             | head -n 1 \
PATCH
popd

# Create /opt/apps for user applications
cat <<EOF >> /opt/clusterware/etc/gridware/global/modulespath
#=User applications
/opt/apps/etc/modules
EOF
mkdir -p /opt/apps/etc/modules
cp /opt/clusterware/etc/gridware/depotskel/modules/null /opt/apps/etc/modules
chgrp -R gridware /opt/apps
chmod -R g+rw /opt/apps
find /opt/apps -type d -exec chmod g+s {} \;
cat <<\EOF > /opt/clusterware/etc/cluster-nfs.d/cluster-apps.rc
################################################################################
##
## Alces Clusterware - Shell configuration
## Copyright (c) 2016 Alces Software Ltd
##
################################################################################
if [ -d "/opt/apps" ]; then
  cw_CLUSTER_NFS_exports="${cw_CLUSTER_NFS_exports} /opt/apps"
fi
EOF

# Prefer binary installation over compiling from source
sed -i -e 's/cw_GRIDWARE_prefer_binary=false/cw_GRIDWARE_prefer_binary=true/g' \
  /opt/clusterware/etc/gridware.rc

# Configure firewall
yum install -y iptables-services iptables-utils
systemctl enable iptables

###################################################################
# Cleanup
###################################################################

yum clean all

# XXX instance type markers - MUST match CentOS Infra expectation
echo 'azure' > /etc/yum/vars/infra

# chance dhcp client retry/timeouts to resolve #6866
cat  >> /etc/dhcp/dhclient.conf << EOF

timeout 300;
retry 60;
EOF

echo "Fixing SELinux contexts."
touch /var/log/cron
touch /var/log/boot.log
mkdir -p /var/cache/yum
/usr/sbin/fixfiles -R -a restore

# reorder console entries
sed -i 's/console=tty0/console=tty0 console=ttyS0,115200n8/' /boot/grub2/grub.cfg

%end

%packages
@core
chrony
WALinuxAgent
dracut-config-generic
dracut-norescue
firewalld
grub2
kernel
nfs-utils
rsync
tar
yum-utils
-NetworkManager
-aic94xx-firmware
-alsa-firmware
-alsa-lib
-alsa-tools-firmware
-biosdevname
-iprutils
-ivtv-firmware
-iwl100-firmware
-iwl1000-firmware
-iwl105-firmware
-iwl135-firmware
-iwl2000-firmware
-iwl2030-firmware
-iwl3160-firmware
-iwl3945-firmware
-iwl4965-firmware
-iwl5000-firmware
-iwl5150-firmware
-iwl6000-firmware
-iwl6000g2a-firmware
-iwl6000g2b-firmware
-iwl6050-firmware
-iwl7260-firmware
-libertas-sd8686-firmware
-libertas-sd8787-firmware
-libertas-usb8388-firmware
-plymouth

%end
